// Social media data loader for static JSON file
// This script loads follower counts from the JSON file generated by GitHub Actions

// Configuration
const CONFIG = {
    dataUrl: 'social_data.json',    // Path to the JSON file with social media data
    showChanges: false              // No animations for follower count changes
};

// Function to fetch the social media data from JSON file
async function fetchSocialData() {
    try {
        // Add cache-busting parameter to avoid browser caching
        const cacheBuster = new Date().getTime();
        const response = await fetch(`${CONFIG.dataUrl}?_=${cacheBuster}`);

        if (!response.ok) {
            throw new Error(`Failed to fetch social data: ${response.status} ${response.statusText}`);
        }

        const data = await response.json();
        return data;
    } catch (error) {
        console.error('Error fetching social media data:', error);
        return null;
    }
}

// Function to update the UI with fetched data
async function updateSocialCountsUI() {
    // Fetch the data
    const data = await fetchSocialData();

    if (!data) {
        console.error('Could not update social counts: No data available');
        return;
    }

    // Update Instagram followers
    const instagramCount = data.instagram?.followers;
    if (instagramCount !== undefined) {
        const instagramElement = document.querySelector('.profilePanel:nth-child(2) .socialButtons #numberTitle:nth-child(3)');
        if (instagramElement) {
            instagramElement.textContent = instagramCount;
        }
    }

    // Update Twitter followers
    const twitterCount = data.twitter?.followers;
    if (twitterCount !== undefined) {
        const twitterElement = document.querySelector('.profilePanel:nth-child(3) .socialButtons #numberTitle:nth-child(5)');
        if (twitterElement) {
            twitterElement.textContent = twitterCount;
        }
    }
}

// Initial update when page loads
document.addEventListener('DOMContentLoaded', () => {
    // Hide all loading overlays permanently
    const loadingOverlays = document.querySelectorAll('.loading-overlay');
    loadingOverlays.forEach(overlay => {
        overlay.style.display = 'none';
    });

    // Perform one-time update of follower counts
    updateSocialCountsUI();
});